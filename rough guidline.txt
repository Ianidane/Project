Similar to the life simulator that's 1 day turn based.

You are a soldier in a certain war or series of wars. Live life day by day via one button but you can influence
certain events in between days and such depending on rank.

You have an inventory and get paid a wage by your captain or leige.

Thinking it will have basically the same interface as the life simulator with a couple other sub windows.

battles would be eu4 style where there are 3 flanks and it's units going into battle with you bein one of them
you watch the battle unfold but no indepth graphics or anything, just the battle system like eu4 where you
watch each flank attack each other.


think life simulator graphics/engine, mount and blade freedom, eu4 battles



All open to interpretation or change.

I read up on it and it's definately doable in python which is the language I know the most right now.



For events, blit one image to the screen and then blit another image on top of that image for the button and
blit the text to the first image


Spare time activities - choose one spare time activity while on the ship to influence future events





import pygame, sys
from pygame.locals import *

class Main:
    def init(self):
        pygame.init()
        screen = pygame.display.set_mode((1000, 800))
        background = pygame.image.load("back.jpg").convert()
        pygame.set_caption('Army Project')
        

    def loop():
        while 1:
            for event in pygame.event.get():
                if event.type == QUIT:
                    return
            screen.blit(background, (0,0))

if _name_ == '__Main__':
    Main()
    
                        


import pygame, sys
from pygame.locals import *

def button(self):
    button = self.get_rect()

def buttonlp(self):
    for event in pygame.event.get():
        if event.type == pygame.mouse.get_pressed():
            pos = pygame.mouse.get_pos()
            if self.collidepoint(pos):
                return
                



import pygame, sys
import Interface
from pygame.locals import *
from Interface import *



def main():

    pygame.init()
    screen = pygame.display.set_mode((1000, 800),0,32)
    background = pygame.image.load("back.jpg").convert()
    live = pygame.image.load("live.png").convert()   
    pygame.display.set_caption('Army Project')


    while True:
        for event in pygame.event.get():
            if event.type == QUIT:
                pygame.quit()
                sys.exit()
                
        screen.blit(background, (0,0))
        screen.blit(live, (780,680))
        pygame.display.update()
        functions.button(live)

if __name__ == '__main__':
    main()
    


def button(self):
    b = globalvars.screen.blit(self, (780,680))
    for event in pygame.event.get():
        if event.type == pygame.MOUSEBUTTONDOWN and event.button == 1:
            pos = pygame.mouse.get_pos()
            print pos
            if b.collidepoint(pos):
                print "Hello World"
                return
                        

    area.topleft = (781, 682)
    area.bottomright = (976, 779)




def button(self, x, y,):
    b = globalvars.screen.blit(self, (x,y))
    for event in pygame.event.get():
        if event.type == pygame.MOUSEBUTTONDOWN and event.button == 1:
            pos = pygame.mouse.get_pos()
            if b.collidepoint(pos):
                print "Helloa"
                time()



def inventory(self, x, y,):
    c = globalvars.screen.blit(self, (x,y))
    for event in pygame.event.get():
        if event.type == pygame.MOUSEBUTTONDOWN and event.button == 1:
            pos = pygame.mouse.get_pos()
            if c.collidepoint(pos):
                print "inv"
                time()
     


def button(self, x, y,):
    b = globalvars.screen.blit(self, (x,y))
    for event in pygame.event.get():
        if event.type == pygame.MOUSEBUTTONDOWN and event.button == 1:
            pos = pygame.mouse.get_pos()
            if b.collidepoint(pos):
                time()


def inventory(x, y,):
    c = globalvars.screen.blit(globalvars.inv, (x,y))
    for event in pygame.event.get():
        poss = pygame.mouse.get_pos()
        if c.collidepoint(poss):
            globalvars.inv = pygame.image.load("Inv2.png").convert_alpha()
        if not c.collidepoint(poss):
            globalvars.inv = pygame.image.load("Inv.png").convert_alpha()
            print "is"
        if event.type == pygame.MOUSEBUTTONDOWN and event.button == 1:
            if c.collidepoint(poss):
                print "inv"

               
     


def button(x, y,):
    b = globalvars.screen.blit(globalvars.live, (x,y))
    for event in pygame.event.get():
        pos = pygame.mouse.get_pos()
        if b.collidepoint(pos):
            globalvars.live = pygame.image.load("live2.png").convert_alpha()
        if not b.collidepoint(pos):
            print "not"
            globalvars.live = pygame.image.load("live.png").convert_alpha()
        if event.type == pygame.MOUSEBUTTONDOWN and event.button == 1:
            if b.collidepoint(pos):
                time()



def button(self, x, y,):
    b = globalvars.screen.blit(self, (x,y))
    pos = pygame.mouse.get_pos()
    if b.collidepoint(pos):
        globalvars.live = pygame.image.load("live2.png").convert_alpha()
    if not b.collidepoint(pos):
        globalvars.live = pygame.image.load("live.png").convert_alpha()
    for event in pygame.event.get():
        if event.type == pygame.MOUSEBUTTONDOWN and event.button == 1:
            if b.collidepoint(pos):
                time()



def inventory(self, x, y,):
    c = globalvars.screen.blit(self, (x,y))
    poss = pygame.mouse.get_pos()
    if c.collidepoint(poss):
        globalvars.inv = pygame.image.load("Inv2.png").convert_alpha()
    if not c.collidepoint(poss):
        globalvars.inv = pygame.image.load("Inv.png").convert_alpha()
    for event in pygame.event.get():
        if event.type == pygame.MOUSEBUTTONDOWN and event.button == 1:
            if c.collidepoint(poss):
                print "inv"
                

               
     


def button(self, x, y,):
    b = globalvars.screen.blit(self, (x,y))
    pos = pygame.mouse.get_pos()
    if b.collidepoint(pos):
        globalvars.live = pygame.image.load("live2.png").convert_alpha()
    if not b.collidepoint(pos):
        globalvars.live = pygame.image.load("live.png").convert_alpha()
    for event in pygame.event.get():
        if event.type == pygame.MOUSEBUTTONDOWN and button == 1:
            if b.collidepoint(pos):
                time()


    

